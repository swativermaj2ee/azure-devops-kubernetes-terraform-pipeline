# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
pool:
  vmImage: ubuntu-latest

steps:
- script: echo K8s Terraform Azure!
  displayName: 'Run a one-line script'
- task: DownloadSecureFile@1
  name: publickey
  inputs:
    secureFile: 'aksprodsshkey.pub'
- task: TerraformCLI@0
  inputs:
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
    commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret)'
    backendType: 'azurerm'
    backendServiceArm: 'azure-resorce-manager-service-connection'
    backendAzureRmSubscriptionId: '2c5ae364-77f3-40a0-a3a5-bbb724cef2b0'
    ensureBackend: true
    backendAzureRmResourceGroupLocation: 'eastus'
    backendAzureRmStorageAccountName: 'tfstatestorageaccountxyz'
    backendAzureRmContainerName: 'terraform-state-file-container'
    backendAzureRmKey: 'kubernetes-dev.tfstate'
    allowTelemetryCollection: false'
    

- task: TerraformCLI@0
  inputs:
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
    environmentServiceName: 'azure-resorce-manager-service-connection'
    commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret)'
    allowTelemetryCollection: false
  



